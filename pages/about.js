import { useState, useRef } from "react";
import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import Link from 'next/link'

export function Slider ({step, setFormStep, stepsTotal}) { 
    return (
        <div className='flex flex-row my-10 justify-between'>
            {[...Array(stepsTotal).keys()].map((i, v) => 
            <svg onClick={()=> {setFormStep(i)}} key={i} width={(100 / stepsTotal ) - 2 + "%"} height={"10"} className=''>
                <rect width="100%" height="3" className={step == i ? 'fill-blue' : 'fill-white'} />
            </svg>)}
        </div>)
}

const ABOUT_TEXT = [
    {text: `–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –∂—É—Ä–Ω–∞–ª–∞ New England Journal of Medicine –ø–æ–∫–∞–∑–∞–ª–∏, 
    —á—Ç–æ 52% –ª—é–¥–µ–π –±—Ä–æ—Å–∏–ª–∏ –∫—É—Ä–∏—Ç—å –∫–∞–∫ –º–∏–Ω–∏–º—É–º –Ω–∞ 6 –º–µ—Å—è—Ü–µ–≤ –ø–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ –ø–æ—Å–ø–æ—Ä–∏–ª–∏ –Ω–∞ –¥–µ–Ω—å–≥–∏.
    –ú—ã —Å–¥–µ–ª–∞–ª–∏ –≤—ã–≤–æ–¥, —á—Ç–æ –Ω–∏—á—Ç–æ –Ω–µ –º–æ—Ç–∏–≤–∏—Ä—É–µ—Ç —Å–æ–±–ª—é–¥–∞—Ç—å –ø—Ä–∞–≤–∏–ª–∞ –∫–∞–∫ –¥–µ–Ω—å–≥–∏. 
    –ú—ã –Ω–µ –∑–∞–ø–ª–∞—Ç–∏–º —Ç–µ–±–µ, –Ω–æ –≤–µ–ª–∏—á–∞–π—à–∞—è –Ω–∞–≥—Ä–∞–¥–∞ ‚Äî —ç—Ç–æ –æ—Ç–∫–∞–∑–∞—Ç—å—Å—è –æ—Ç –≤—Ä–µ–¥–Ω–æ–π –ø—Ä–∏–≤—ã—á–∫–∏.`,
    icon: 'üíµ'},
    {text: `–°—Ñ–æ—Ä–º–∏—Ä—É–π –∞—Å–∫–µ–∑—É, –¥–∞–≤ –æ–±–µ—â–∞–Ω–∏–µ –æ—Ç–∫–∞–∑–∞—Ç—å—Å—è –æ—Ç –≤—Ä–µ–¥–Ω–æ–π –ø—Ä–∏–≤—ã—á–∫–∏ –Ω–∞ —Å—Ä–æ–∫ 30 –∏–ª–∏ 100 –¥–Ω–µ–π.`,
    icon: '1'},
    {text: `–û—Ç–ª–æ–∂–∏ —Å—É–º–º—É –¥–µ–Ω–µ–≥, –∫–æ—Ç–æ—Ä—É—é –Ω–µ —Ö–æ—á–µ—à—å –ø–æ—Ç–µ—Ä—è—Ç—å.
     –ú—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –Ω–∞—á–∞—Ç—å —Å 5 000 —Ä—É–±–ª–µ–π, –Ω–æ –º–æ–∂–Ω–æ –∏ –≤—ã–±—Ä–∞—Ç—å –±–æ–ª–µ–µ –∫–æ–º—Ñ–æ—Ä—Ç–Ω—É—é –¥–ª—è —Ç–µ–±—è —Å—É–º–º—É.`,
     icon: '2'},
    {text: `–†–∞—Å—Å–∫–∞–∂–∏ –¥—Ä—É–∑—å—è–º, —á—Ç–æ —Ö–æ—á–µ—à—å –æ—Ç–∫–∞–∑–∞—Ç—å—Å—è –æ—Ç –≤—Ä–µ–¥–Ω–æ–π –ø—Ä–∏–≤—ã—á–∫–∏, –ø–æ–¥–µ–ª–∏–≤—à–∏—Å—å —Å—Å—ã–ª–∫–æ–π. `,
    icon: '3'},
    {text: `–ï—Å–ª–∏ –æ–Ω–∏ –∑–∞–º–µ—Ç—è—Ç —Ç–µ–±—è –∑–∞ –Ω–∞—Ä—É—à–µ–Ω–∏–µ–º –æ–±–µ—â–∞–Ω–∏—è, —Ç–æ –ø—Ä–∏—à–ª—é—Ç —Ñ–æ—Ç–æ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞. 
    –¢–∞–∫–∂–µ, –µ—Å–ª–∏ —Ç—ã —Å–∞–º –Ω–∞—Ä—É—à–∏–ª –∞—Å–∫–µ–∑—É, —Ç–æ –º–æ–∂–µ—à—å —á–µ—Å—Ç–Ω–æ –∑–∞—è–≤–∏—Ç—å –æ–± —ç—Ç–æ–º.`,
    icon: '4'},
    {text: `–ü—Ä–æ–∏–≥—Ä–∞–≤ –±–∏—Ç–≤—É –Ω–∞–¥ —Å–∞–º–∏–º —Å–æ–±–æ–π, –æ—Ç–ª–æ–∂–µ–Ω–Ω—É—é —Å—É–º–º—É –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –ø–æ—Ç—Ä–∞—Ç–∏—Ç—å –Ω–∞ –±–ª–∞–≥–æ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å.`, 
    icon: '5'},
    {text: `–ù–µ –≤–µ—Ä–∏—à—å, —á—Ç–æ —ç—Ç–∞ ¬´–∏–≥—Ä–∞¬ª –ø–æ–º–æ–∂–µ—Ç –¥–æ—Å—Ç–∏–≥–Ω—É—Ç—å –∑–∞–≤–µ—Ç–Ω–æ–π —Ü–µ–ª–∏? –ê —Ç—ã –ø—Ä–æ–≤–µ—Ä—å –∏ –±—ã—Å—Ç—Ä–æ –≤—Ç—è–Ω–µ—à—å—Å—è –≤ –ø—Ä–æ—Ü–µ—Å—Å. 
    –ü–æ—Ç–µ—Ä—è–≤ –æ–¥–Ω–∞–∂–¥—ã –∫—Ä—É–≥–ª—É—é —Å—É–º–º—É, –≤—Ä—è–¥ –ª–∏ —Ç—ã –∑–∞—Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å —ç—Ç–æ —Å–Ω–æ–≤–∞. 
    –ö —Ç–æ–º—É –∂–µ, –±—É–¥–µ—Ç –æ—á–µ–Ω—å —Å—Ç—ã–¥–Ω–æ –ø–µ—Ä–µ–¥ –¥—Ä—É–∑—å—è–º–∏, –∫–æ–≥–¥–∞ –æ–Ω–∏ –∑–∞—Å—Ç—É–∫–∞—é—Ç —Ç–µ–±—è –∑–∞ –Ω–∞—Ä—É—à–µ–Ω–∏–µ–º.`,
    icon: 'üëæ'},
]

export function InfoBlock({step, nextFormStep}) {
    
    const textBase = ABOUT_TEXT.map((v,i) => <>
        <p key={i} className="mx-auto text-6xl my-6 text-blue">{v.icon}</p>
        <p className='text-lg font-extralight'>
            {v.text}
        </p>
    </>)

    return (<div className="flex flex-col h-full justify-between">
                { textBase[step] }
                { step < textBase.length - 1 ? 
                <Link onClick={nextFormStep} href='#' className='text-center font-extralight text-xl text-gray-100 bg-violet-background rounded-xl px-16 py-4 mt-4'>
                    –î–∞–ª–µ–µ
                </Link> :
                <>
                    <Link href='/create' className='text-center font-extralight text-xl text-gray-100 bg-violet-background rounded-xl px-16 py-4 mt-4'>
                        –°–æ–∑–¥–∞—Ç—å –∞—Å–∫–µ–∑—É
                    </Link>
                    <Link href='/' className="font-extralight block lowercase mx-auto text-xl text-blue">
                        –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é
                    </Link>
                </>
                }
            </div>)
}

export default function About() {
    const [formStep, setFormStep] = useState(0);
    const nextFormStep = () => setFormStep((currentStep) => currentStep + 1);

  return (
    <main  className='bg-black-background min-safe-h-screen h-px'>
        <div className='flex flex-col mx-7 h-full justify-between'>
            <Slider stepsTotal={ABOUT_TEXT.length} step={formStep} setFormStep={setFormStep}/>
            <div className='flex flex-col bg-white rounded-xl h-4/6 p-5 mb-20'>
                <InfoBlock step={formStep} nextFormStep={nextFormStep}/>
            </div>
        </div>
    </main>
    
  )
}